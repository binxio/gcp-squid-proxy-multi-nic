#! /bin/bash

# Setup
echo "Installing dependencies.."
apt-get update
apt-get install -y squid-openssl iptables iproute2 net-tools systemd


# Fix health checks on load balancer IP in Source VPC: Configure
# the correct gateway (source vpc interface) for traffic to load
# balancer alias IP
echo "Configuring gateway for load balanced traffic in Source VPC.."

echo "Waiting for source VPC network device to exist"
until ifconfig ens5 > /dev/null 2>&1
do
    echo "Still waiting for device ens5 to attach"
    sleep 5
done

until [ "$(ip -o -4 addr show dev ens5 | awk '{print $4}')" != "" ]
do
    echo "Still waiting for device ens5 to connect"
    sleep 5
done

until [ "$(ip route | grep 'dev ens5 scope link' | awk '{print $1}')" != "" ]
do
    echo "Still waiting for device ens5 to configure"
    sleep 5
done

echo "Adding 'source' route table for load balanced traffic in source VPC"
SOURCE_CIDR=$(ip -o -4 addr show dev ens5 | awk '{print $4}')
SOURCE_IP=$${SOURCE_CIDR%"/32"}

SOURCE_GW_IP=$(ip route | grep 'dev ens5 scope link' | awk '{print $1}')
SOURCE_GW_SUBNET=$(ip route | grep "via $SOURCE_GW_IP dev ens5 proto dhcp" | awk '{print $1}')

DEFAULT_CIDR=$(ip -o -4 addr show dev ens4 | awk '{print $4}')
DEFAULT_IP=$${DEFAULT_CIDR%"/32"}

DEFAULT_GW_IP=$(ip route | grep 'default via' | awk '{print $3}')

# Return load balanced traffic over source VPC interface
echo "1 source" >> /etc/iproute2/rt_tables
ip rule add priority 100 from ${load_balancer_ip} table source
ip route add default via $SOURCE_GW_IP dev ens5 src $SOURCE_IP table source

# Route secondary nic traffic to destination VPC (including the source IP)
echo "2 destination" >> /etc/iproute2/rt_tables
ip rule add priority 200 to $SOURCE_IP table destination
ip rule add priority 400 to $SOURCE_GW_SUBNET table destination
ip route add $DEFAULT_GW_IP dev ens4 scope link src $DEFAULT_IP table destination
ip route add default via $DEFAULT_GW_IP dev ens4 src $DEFAULT_IP table destination

# Reorder routes to  is handled at the right moment in time
ip rule add priority 300 lookup local
ip rule delete priority 0 lookup local


## Proxy configuration..
echo "Configuring squid proxy.."

# # NOTE: Listen on all IPs to bind TCP load balancer IP..
cat <<EOF >/etc/squid/squid.conf
http_port 3128

# Filter traffic
# Disable unsafe ports
acl Safe_ports port 80
acl Safe_ports port 443
http_access deny !Safe_ports

# Deny CONNECT to other than secure SSL ports
acl SSL_ports port 443
acl CONNECT method CONNECT
http_access deny CONNECT !SSL_ports

# Allow all HTTP traffic, use a more fine-grained setup in production..
http_access allow all

# Deny non-HTTP traffic
cache deny all
htcp_access deny all
htcp_clr_access deny all
icp_access deny all
icap_retry deny all
snmp_access deny all
EOF

echo "Restarting squid.."
systemctl restart squid

if [ $? -eq 0 ]; then
    echo "Ready to roll"
else
    echo "Failed to launch. Aborting.."
    exit 1
fi
